Shortterm Goal:

	- Fetch memory information from limine ✓
		- Memory in system (locations)     ✓
		- Current memory mappings          ✓
		- Memory used by bootloader        ✓

	- Write support for loading and setting a GDT       ?
		* Might be non-trivial at this stage
		* The goal here would be to just rid off
		  limine's GDT, while also paving the way
		  for a proper one. I strongly suspect the
		  16-bit and 32-bit entries on them are
		  redundant.

	!-Write support for serial port
		* Potentially, Limine seems to crash whenever we load a new GDT
		(lgdt; mov xs, ... word, but the kernel eventually crashes at
		an address owned by the bootloader, most problably after
		a call to kprintf()).
		* We cannot test the GDT until we have an alternative form of output.

	- Unload limine

	- Set memory layout sane
		- Unmap lower addresses mapped by limine

	- Make a memory manager

This may involve manipulating the "bootloader page tables", as in,
transform them into my own.

I may also have to revisit how limine loads the kernel.
I may also have to set up the GDT before unloading limine.
